plugins {
	id 'java-gradle-plugin'
	id 'maven-publish'
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

group = 'jp.co.ultimark.genesis'
version = '1.0.3'

gradlePlugin {
	
	website = 'https://github.com/kimura-ultimark/genesis'
	vcsUrl = 'https://github.com/kimura-ultimark/genesis'

	plugins {
		// Genesis CodeGen
		genesisCodeGen {
			id = 'jp.co.ultimark.genesis.gradle.plugin.codegen'
			displayName = 'Genesis CodeGen Plugin'
			description = 'Code generation plugin based on Doma CodeGen plugin.'
			tags.set([ 'ultimark' ])
			implementationClass = 'jp.co.ultimark.genesis.gradle.plugin.codegen.GenesisCodegenPlugin'
			version = '1.0.3'
		}
		// Genesis Mockup
  		genesisMockup {
  			id = 'jp.co.ultimark.genesis.gradle.plugin.mockup'
  			displayName = 'Genesis Mockup Plugin'
  			description = 'Original mockup plugin. Any htmls and other static resources can be deployed to Spring Boot managed resources.'
  			tags.set([ 'ultimark' ])
  			implementationClass = 'jp.co.ultimark.genesis.gradle.plugin.mockup.GenesisMockupPlugin'
  			version = '1.0.3'
  		}
	}
}

publishing{

	publications {
    maven(MavenPublication) {
    	groupId = 'jp.co.ultimark.genesis'
    	artifactId = 'genesis-dev-support'
    	version = '1.0.3'
    	
    	from components.java
    }
  }
	
	repositories {
		maven {
			name = 'internal'
			url = uri('http://localhost:8081/repository/maven-releases/')
			allowInsecureProtocol = true
			credentials {
				username 'admin'
				password '4EwjMbQrei6U'
			}
		}
	}
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
	options.encoding = 'UTF-8'
}


repositories {
	mavenCentral()
	maven {
		url('https://plugins.gradle.org/m2/')
	}
}

dependencies {
	implementation 'org.domaframework.doma:codegen:3.2.1'
	testImplementation(platform('org.junit:junit-bom:5.12.1'))
	testImplementation('org.junit.jupiter:junit-jupiter')
	testRuntimeOnly('org.junit.platform:junit-platform-launcher')
}

test {
	useJUnitPlatform()
}